Product:
 actAs:
  I18n:
   fields: [name,description,slug,synopsis,producer_description,critics,language,country]
  Timestampable: ~ 
  Userid:
   created:
     name: created_by
     type: integer
   updated:
     name: updated_by
     type: integer
 columns:
  code: { type: string(255), notnull: true, unique: true }
  slug: { type: string(255), notnull: true, default: "" }
  original_title: { type: string(400), notnull: false }
  producer: { type: string(255), notnull: false}
  trailer_link: { type: string(255), notnull: false}
  country: { type: string(255), notnull: false}
  synopsis: { type: clob, notnull: false }
  producer_description: { type: string(700), notnull: false }
  critics: { type: string(700), notnull: false }
  language: { type: string(700), notnull: false }
  type: { type: string(255), notnull: false }
  parameter: { type: string(255), notnull: false, default: "default" }
  name: { type: string(1000), notnull: false }
  trailer_link: { type: string(400), notnull: false }
  year: { type: integer, notnull: false }
  pri: { type: integer, notnull: true, default: 100 }
  rating_sum: { type: integer, notnull: true, default: 5 }
  rating_votes: { type: integer, notnull: true, default: 1 }
  price: { type: float, notnull: false }
  description: { type: string(6000), notnull: false }
  is_active: { type: boolean, notnull: true, default: 1 }
 relations:
  ConnectedProducts:
   class: Product
   local: product1
   foreign: product2
   refClass: ProductVsProduct
   equal: true
  ParameterOptions:
   class: ParameterOption
   local: product_id
   foreign: option_id
   refClass: ParameterProductOption
 indexes:
    myindex:
      fields: [pri]

# cinemas connected to Products
Cinema:
 actAs:
  I18n:
   fields: [name]
 columns:
  name: { type: string(255), notnull: true }
  eventival_id: { type: integer, notnull: true }
  city: { type: string(255), notnull: true }

CinemaHall:
 actAs:
  I18n:
   fields: [name]
 columns:
  name: { type: string(255), notnull: true }
  eventival_id: { type: integer, notnull: true }
  cinema_id: { type: integer, notnull: true }
 relations:
  Cinema:
   local: cinema_id
   foreign: id
   foreignAlias: Halls
   onDelete: CASCADE
   onUpdate: CASCADE


ProductGroup:
 actAs:
  I18n:
   fields: [name,meta_title,meta_description,meta_keywords,slug,description]
  NestedSet: ~
  Timestampable: ~ 
  Userid:
   created:
     name: created_by
     type: integer
   updated:
     name: updated_by
     type: integer
 columns:
  title: { type: string(255), notnull: true }
  slug: { type: string(255), notnull: true, default: "" }
  description: { type: string(755), notnull: false }
  picture: { type: string(255), notnull: false }
  picture_inactive: { type: string(255), notnull: false }
  meta_title: { type: string(1000), notnull: false }
  meta_description: { type: string(1000), notnull: false }
  meta_keywords: { type: string(1000), notnull: false }
  name: { type: string(300), notnull: false }
  import_code: { type: string(255), notnull: false }
  pri: { type: integer, notnull: false }
  parameter: { type: string(255), notnull: false, default: "default" }
 indexes:
    myindex:
      fields: [pri]

ProductGroupVsStructure:
 columns:
   group_id: { type: integer, notnull: true, primary: true }
   structure_id: { type: integer, notnull: true, primary: true }
 relations:
   ProductGroup:
    local: group_id
    foreign: id
    foreignAlias: StructureProductGroup
    onDelete: CASCADE
    onUpdate: CASCADE
   Structure:
    local: structure_id
    foreign: id
    foreignAlias: StructureProductGroup
    onDelete: CASCADE
    onUpdate: CASCADE
  

ProductVsProductGroup:
 columns:
   group_id: { type: integer, notnull: true, primary: true }
   product_id: { type: integer, notnull: true, primary: true }
 relations:
   ProductGroup:
    local: group_id
    foreign: id   
    foreignAlias: Products
    onDelete: CASCADE 
    onUpdate: CASCADE
   Product:
    local: product_id
    foreign: id   
    foreignAlias: ProductGroups
    onDelete: CASCADE 
    onUpdate: CASCADE

    
ProductVsProduct:
 columns:
   product1: { type: integer, notnull: true, primary: true }
   product2: { type: integer, notnull: true, primary: true }
   
ProductPictures:
 actAs:
  I18n:
   fields: [name]
 columns:
  file: { type: string(255), notnull: true }
  pri: { type: integer, notnull: true, default 0 }
  original_filename: { type: string(255), notnull: false }
  name: { type: string(255), notnull: false }
  parameter: { type: string(255), notnull: true, default: "default" }
  product_id: { type: integer, notnull: true }
 relations:
  Product:
   local: product_id
   foreign: id
   foreignAlias: ProductPictures
   onDelete: CASCADE
   onUpdate: CASCADE
 indexes:
    myindex:
      fields: [pri]
    parameterindex:
      fields: [parameter]


ProductFile:
 actAs:
  I18n:
   fields: [name]
 columns:
  file: { type: string(255), notnull: true }
  pri: { type: integer, notnull: true, default 0 }
  original_filename: { type: string(255), notnull: false }
  name: { type: string(255), notnull: false }
  parameter: { type: string(255), notnull: true, default: "default" }
  product_id: { type: integer, notnull: true }
 relations:
  Product:
   local: product_id
   foreign: id
   foreignAlias: ProductFiles
   onDelete: CASCADE
   onUpdate: CASCADE
   