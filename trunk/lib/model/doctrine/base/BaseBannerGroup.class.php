<?php

/**
 * BaseBannerGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $type
 * @property integer $height
 * @property integer $width
 * @property boolean $is_active
 * @property integer $banners_limit
 * @property Doctrine_Collection $Banners
 * @property Doctrine_Collection $StructureBannerGroups
 * @property Doctrine_Collection $BannerGroups
 * 
 * @method string              getName()                  Returns the current record's "name" value
 * @method string              getType()                  Returns the current record's "type" value
 * @method integer             getHeight()                Returns the current record's "height" value
 * @method integer             getWidth()                 Returns the current record's "width" value
 * @method boolean             getIsActive()              Returns the current record's "is_active" value
 * @method integer             getBannersLimit()          Returns the current record's "banners_limit" value
 * @method Doctrine_Collection getBanners()               Returns the current record's "Banners" collection
 * @method Doctrine_Collection getStructureBannerGroups() Returns the current record's "StructureBannerGroups" collection
 * @method Doctrine_Collection getBannerGroups()          Returns the current record's "BannerGroups" collection
 * @method BannerGroup         setName()                  Sets the current record's "name" value
 * @method BannerGroup         setType()                  Sets the current record's "type" value
 * @method BannerGroup         setHeight()                Sets the current record's "height" value
 * @method BannerGroup         setWidth()                 Sets the current record's "width" value
 * @method BannerGroup         setIsActive()              Sets the current record's "is_active" value
 * @method BannerGroup         setBannersLimit()          Sets the current record's "banners_limit" value
 * @method BannerGroup         setBanners()               Sets the current record's "Banners" collection
 * @method BannerGroup         setStructureBannerGroups() Sets the current record's "StructureBannerGroups" collection
 * @method BannerGroup         setBannerGroups()          Sets the current record's "BannerGroups" collection
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseBannerGroup extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('banner_group');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'default',
             'length' => '255',
             ));
        $this->hasColumn('height', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('width', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('banners_limit', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Banner as Banners', array(
             'local' => 'id',
             'foreign' => 'banner_group_id'));

        $this->hasMany('BannerGroupVsStructure as StructureBannerGroups', array(
             'local' => 'id',
             'foreign' => 'banner_group_id'));

        $this->hasMany('BannerGroupVsProductGroup as BannerGroups', array(
             'local' => 'id',
             'foreign' => 'banner_group_id'));
    }
}