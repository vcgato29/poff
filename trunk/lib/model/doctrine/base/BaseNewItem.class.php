<?php

/**
 * BaseNewItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property string $content
 * @property timestamp $active_start
 * @property timestamp $active_end
 * @property string $source
 * @property string $tags
 * @property integer $group_id
 * @property integer $pri
 * @property string $picture
 * @property string $type
 * @property NewsGroup $NewsGroup
 * 
 * @method string    getName()         Returns the current record's "name" value
 * @method string    getDescription()  Returns the current record's "description" value
 * @method string    getContent()      Returns the current record's "content" value
 * @method timestamp getActiveStart()  Returns the current record's "active_start" value
 * @method timestamp getActiveEnd()    Returns the current record's "active_end" value
 * @method string    getSource()       Returns the current record's "source" value
 * @method string    getTags()         Returns the current record's "tags" value
 * @method integer   getGroupId()      Returns the current record's "group_id" value
 * @method integer   getPri()          Returns the current record's "pri" value
 * @method string    getPicture()      Returns the current record's "picture" value
 * @method string    getType()         Returns the current record's "type" value
 * @method NewsGroup getNewsGroup()    Returns the current record's "NewsGroup" value
 * @method NewItem   setName()         Sets the current record's "name" value
 * @method NewItem   setDescription()  Sets the current record's "description" value
 * @method NewItem   setContent()      Sets the current record's "content" value
 * @method NewItem   setActiveStart()  Sets the current record's "active_start" value
 * @method NewItem   setActiveEnd()    Sets the current record's "active_end" value
 * @method NewItem   setSource()       Sets the current record's "source" value
 * @method NewItem   setTags()         Sets the current record's "tags" value
 * @method NewItem   setGroupId()      Sets the current record's "group_id" value
 * @method NewItem   setPri()          Sets the current record's "pri" value
 * @method NewItem   setPicture()      Sets the current record's "picture" value
 * @method NewItem   setType()         Sets the current record's "type" value
 * @method NewItem   setNewsGroup()    Sets the current record's "NewsGroup" value
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseNewItem extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('new_item');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('description', 'string', 1000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '1000',
             ));
        $this->hasColumn('content', 'string', 9999, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '9999',
             ));
        $this->hasColumn('active_start', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('active_end', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('source', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('tags', 'string', 1000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '1000',
             ));
        $this->hasColumn('group_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('pri', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('picture', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'default',
             'length' => '255',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('NewsGroup', array(
             'local' => 'group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($sluggable0);
    }
}