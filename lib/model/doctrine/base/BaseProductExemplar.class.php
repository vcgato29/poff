<?php

/**
 * BaseProductExemplar
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $comment
 * @property string $code
 * @property string $location
 * @property timestamp $scheduled_time
 * @property integer $product_id
 * @property string $buy_link
 * @property string $cinema
 * @property Product $Product
 * @property Doctrine_Collection $UserProductExemplars
 * 
 * @method string              getComment()              Returns the current record's "comment" value
 * @method string              getCode()                 Returns the current record's "code" value
 * @method string              getLocation()             Returns the current record's "location" value
 * @method timestamp           getScheduledTime()        Returns the current record's "scheduled_time" value
 * @method integer             getProductId()            Returns the current record's "product_id" value
 * @method string              getBuyLink()              Returns the current record's "buy_link" value
 * @method string              getCinema()               Returns the current record's "cinema" value
 * @method Product             getProduct()              Returns the current record's "Product" value
 * @method Doctrine_Collection getUserProductExemplars() Returns the current record's "UserProductExemplars" collection
 * @method ProductExemplar     setComment()              Sets the current record's "comment" value
 * @method ProductExemplar     setCode()                 Sets the current record's "code" value
 * @method ProductExemplar     setLocation()             Sets the current record's "location" value
 * @method ProductExemplar     setScheduledTime()        Sets the current record's "scheduled_time" value
 * @method ProductExemplar     setProductId()            Sets the current record's "product_id" value
 * @method ProductExemplar     setBuyLink()              Sets the current record's "buy_link" value
 * @method ProductExemplar     setCinema()               Sets the current record's "cinema" value
 * @method ProductExemplar     setProduct()              Sets the current record's "Product" value
 * @method ProductExemplar     setUserProductExemplars() Sets the current record's "UserProductExemplars" collection
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductExemplar extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_exemplar');
        $this->hasColumn('comment', 'string', 500, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 500,
             ));
        $this->hasColumn('code', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('location', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('scheduled_time', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('product_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('buy_link', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('cinema', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('ProductExemplarVsPublicUser as UserProductExemplars', array(
             'local' => 'id',
             'foreign' => 'exemplar_id'));

        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'comment',
             ),
             ));
        $this->actAs($i18n0);
    }
}