<?php

/**
 * BaseBannerGroupVsProductGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $banner_group_id
 * @property integer $product_group_id
 * @property BannerGroup $BannerGroup
 * @property ProductGroup $ProductGroup
 * 
 * @method integer                   getBannerGroupId()    Returns the current record's "banner_group_id" value
 * @method integer                   getProductGroupId()   Returns the current record's "product_group_id" value
 * @method BannerGroup               getBannerGroup()      Returns the current record's "BannerGroup" value
 * @method ProductGroup              getProductGroup()     Returns the current record's "ProductGroup" value
 * @method BannerGroupVsProductGroup setBannerGroupId()    Sets the current record's "banner_group_id" value
 * @method BannerGroupVsProductGroup setProductGroupId()   Sets the current record's "product_group_id" value
 * @method BannerGroupVsProductGroup setBannerGroup()      Sets the current record's "BannerGroup" value
 * @method BannerGroupVsProductGroup setProductGroup()     Sets the current record's "ProductGroup" value
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseBannerGroupVsProductGroup extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('banner_group_vs_product_group');
        $this->hasColumn('banner_group_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('product_group_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BannerGroup', array(
             'local' => 'banner_group_id',
             'foreign' => 'id'));

        $this->hasOne('ProductGroup', array(
             'local' => 'product_group_id',
             'foreign' => 'id'));
    }
}