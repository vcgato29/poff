<?php

/**
 * BaseProductExemplarVsPublicUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $exemplar_id
 * @property integer $user_id
 * @property ProductExemplar $ProductExemplar
 * @property PublicUser $PublicUser
 * 
 * @method integer                     getExemplarId()      Returns the current record's "exemplar_id" value
 * @method integer                     getUserId()          Returns the current record's "user_id" value
 * @method ProductExemplar             getProductExemplar() Returns the current record's "ProductExemplar" value
 * @method PublicUser                  getPublicUser()      Returns the current record's "PublicUser" value
 * @method ProductExemplarVsPublicUser setExemplarId()      Sets the current record's "exemplar_id" value
 * @method ProductExemplarVsPublicUser setUserId()          Sets the current record's "user_id" value
 * @method ProductExemplarVsPublicUser setProductExemplar() Sets the current record's "ProductExemplar" value
 * @method ProductExemplarVsPublicUser setPublicUser()      Sets the current record's "PublicUser" value
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductExemplarVsPublicUser extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_exemplar_vs_public_user');
        $this->hasColumn('exemplar_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductExemplar', array(
             'local' => 'exemplar_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('PublicUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));
    }
}