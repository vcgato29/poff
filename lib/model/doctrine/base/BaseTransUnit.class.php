<?php

/**
 * BaseTransUnit
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $msg_id
 * @property integer $cat_id
 * @property string $id
 * @property string $source
 * @property string $target
 * @property string $comments
 * @property string $type
 * @property integer $date_created
 * @property integer $date_modified
 * @property string $author
 * @property integer $translated
 * @property integer $variable_id
 * @property Catalogue $Catalogue
 * @property TransUnitVariable $TransUnitVariable
 * 
 * @method integer           getMsgId()             Returns the current record's "msg_id" value
 * @method integer           getCatId()             Returns the current record's "cat_id" value
 * @method string            getId()                Returns the current record's "id" value
 * @method string            getSource()            Returns the current record's "source" value
 * @method string            getTarget()            Returns the current record's "target" value
 * @method string            getComments()          Returns the current record's "comments" value
 * @method string            getType()              Returns the current record's "type" value
 * @method integer           getDateCreated()       Returns the current record's "date_created" value
 * @method integer           getDateModified()      Returns the current record's "date_modified" value
 * @method string            getAuthor()            Returns the current record's "author" value
 * @method integer           getTranslated()        Returns the current record's "translated" value
 * @method integer           getVariableId()        Returns the current record's "variable_id" value
 * @method Catalogue         getCatalogue()         Returns the current record's "Catalogue" value
 * @method TransUnitVariable getTransUnitVariable() Returns the current record's "TransUnitVariable" value
 * @method TransUnit         setMsgId()             Sets the current record's "msg_id" value
 * @method TransUnit         setCatId()             Sets the current record's "cat_id" value
 * @method TransUnit         setId()                Sets the current record's "id" value
 * @method TransUnit         setSource()            Sets the current record's "source" value
 * @method TransUnit         setTarget()            Sets the current record's "target" value
 * @method TransUnit         setComments()          Sets the current record's "comments" value
 * @method TransUnit         setType()              Sets the current record's "type" value
 * @method TransUnit         setDateCreated()       Sets the current record's "date_created" value
 * @method TransUnit         setDateModified()      Sets the current record's "date_modified" value
 * @method TransUnit         setAuthor()            Sets the current record's "author" value
 * @method TransUnit         setTranslated()        Sets the current record's "translated" value
 * @method TransUnit         setVariableId()        Sets the current record's "variable_id" value
 * @method TransUnit         setCatalogue()         Sets the current record's "Catalogue" value
 * @method TransUnit         setTransUnitVariable() Sets the current record's "TransUnitVariable" value
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseTransUnit extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trans_unit');
        $this->hasColumn('msg_id', 'integer', 4, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('cat_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('id', 'string', 63, array(
             'type' => 'string',
             'length' => '63',
             ));
        $this->hasColumn('source', 'string', 65532, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '65532',
             ));
        $this->hasColumn('target', 'string', 65532, array(
             'type' => 'string',
             'notnull' => false,
             'default' => 'tranlation',
             'length' => '65532',
             ));
        $this->hasColumn('comments', 'string', 63, array(
             'type' => 'string',
             'length' => '63',
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'default' => '',
             'length' => '255',
             ));
        $this->hasColumn('date_created', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('date_modified', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('author', 'string', 63, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => '63',
             ));
        $this->hasColumn('translated', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('variable_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Catalogue', array(
             'local' => 'cat_id',
             'foreign' => 'cat_id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('TransUnitVariable', array(
             'local' => 'variable_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}