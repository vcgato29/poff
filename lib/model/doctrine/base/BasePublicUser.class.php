<?php

/**
 * BasePublicUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $email
 * @property string $currency
 * @property string $login
 * @property string $password
 * @property string $address1
 * @property string $address2
 * @property string $city
 * @property string $state
 * @property string $country
 * @property string $zip
 * @property Doctrine_Collection $Orders
 * @property Doctrine_Collection $Addresses
 * 
 * @method string              getName()      Returns the current record's "name" value
 * @method string              getEmail()     Returns the current record's "email" value
 * @method string              getCurrency()  Returns the current record's "currency" value
 * @method string              getLogin()     Returns the current record's "login" value
 * @method string              getPassword()  Returns the current record's "password" value
 * @method string              getAddress1()  Returns the current record's "address1" value
 * @method string              getAddress2()  Returns the current record's "address2" value
 * @method string              getCity()      Returns the current record's "city" value
 * @method string              getState()     Returns the current record's "state" value
 * @method string              getCountry()   Returns the current record's "country" value
 * @method string              getZip()       Returns the current record's "zip" value
 * @method Doctrine_Collection getOrders()    Returns the current record's "Orders" collection
 * @method Doctrine_Collection getAddresses() Returns the current record's "Addresses" collection
 * @method PublicUser          setName()      Sets the current record's "name" value
 * @method PublicUser          setEmail()     Sets the current record's "email" value
 * @method PublicUser          setCurrency()  Sets the current record's "currency" value
 * @method PublicUser          setLogin()     Sets the current record's "login" value
 * @method PublicUser          setPassword()  Sets the current record's "password" value
 * @method PublicUser          setAddress1()  Sets the current record's "address1" value
 * @method PublicUser          setAddress2()  Sets the current record's "address2" value
 * @method PublicUser          setCity()      Sets the current record's "city" value
 * @method PublicUser          setState()     Sets the current record's "state" value
 * @method PublicUser          setCountry()   Sets the current record's "country" value
 * @method PublicUser          setZip()       Sets the current record's "zip" value
 * @method PublicUser          setOrders()    Sets the current record's "Orders" collection
 * @method PublicUser          setAddresses() Sets the current record's "Addresses" collection
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BasePublicUser extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public_user');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('currency', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('login', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => '255',
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('address1', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('address2', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('state', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('country', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('zip', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ProductOrder as Orders', array(
             'local' => 'id',
             'foreign' => 'public_user_id'));

        $this->hasMany('PublicUserAddresses as Addresses', array(
             'local' => 'id',
             'foreign' => 'public_user_id'));
    }
}